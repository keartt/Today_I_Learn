<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<bean id="student" class="com.all.spring.Student">
		<property name="name" value="홍길동" />
		<property name="age" value="23" />
		<property name="gradeNum" value="3" />
		<property name="classNum" value="5" />
	</bean>

	<bean id="worker" class="com.all.spring.Worker">
		<property name="name" value="김철수" />
		<property name="age" value="26" />
		<property name="job" value="백수" />
	</bean>

	<bean id="logAop" class="com.all.spring.LogAop" />
	<aop:config>
		<aop:aspect id="logger" ref="logAop">
			<!-- 읽는 부분 -->
			<aop:pointcut id="publicM"
				expression="within(com.all.spring.*)" />
			<!-- 앞 뒤에 적용할 때? -->
			<aop:around pointcut-ref="publicM" method="loggerAop" />
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM"
				expression="within(com.all.spring.*)" />
			<aop:before pointcut-ref="publicM" method="beforeAdvice" />
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM"
				expression="within(com.all.spring.*)" />
			<aop:after-returning pointcut-ref="publicM" method="afterReturningAdvice" />
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM"
				expression="within(com.all.spring.*)" />
			<aop:after-throwing pointcut-ref="publicM" method="afterThrowingAdvice" />
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM"
				expression="within(com.all.spring.*)" />
			<aop:after pointcut-ref="publicM" method="afterAdvice" />
		</aop:aspect>
		
		
	</aop:config>


</beans>
